package problem002;

import java.util.ArrayList;
import java.util.List;

public class Problem002 {

    /*
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    */
    
    public static void main(String[] args) {
        List<Integer> fibNumbers = new ArrayList<Integer>();
        fibNumbers.add(1);
        fibNumbers.add(2);
        int i = 2;
        while(fibNumbers.get(fibNumbers.size()-1) <= 4000000)
        {
            int next = fibNumbers.get(i-1) + fibNumbers.get(i-2);
            if (next <= 4000000) {
                fibNumbers.add( fibNumbers.get(i-1) + fibNumbers.get(i-2));
                i++;
            } else {
                break;
            }
        }
        
        
        for (i = 0; i < fibNumbers.size(); i++)
            System.out.println(fibNumbers.get(i));
        
        int totalEvens = 0;
        for (i = 0; i < fibNumbers.size(); i++)
            if (fibNumbers.get(i) % 2 == 0)
                totalEvens += fibNumbers.get(i);
        
        System.out.println("Total evens: " + totalEvens);
        
        
    }//answer: 4613732
    
}
